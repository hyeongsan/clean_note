{"version":3,"sources":["components/InputField.js","components/txtareaField.js","components/MovieForm.js","components/YearAndTitle.js","components/NoneTitle.js","components/movie.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["InputField","type","value","placeholder","onChange","errorMessage","className","TxtareaField","wrap","MovieForm","props","useState","movieTitle","setMovieTitle","movieYear","setMovieYear","TitleError","setTitleError","YearError","setYearError","titleCheck","useEffect","resetErrors","pick","validateTrue","newMovie","id","Date","now","title","year","console","log","existingEntries","JSON","parse","localStorage","getItem","setItem","push","addMovie","validateFalse","validateForm","validated","toggleFlex","formDisplayNone","display","existingInput","existingTxt","stringify","removeItem","toggle","onSubmit","e","preventDefault","style","target","onClick","setFormDisplayNone","class","buttonNone","removeChecked","setPickNone","setPickState","setToggle","copyState","movies","map","item","picktitle","pickYear","setPicktitle","setPickYear","width","textAlign","color","backgroundColor","boxShadow","YearAndTitle","movie","setMovies","pickMovie","removeMovie","pickNone","pickState","trash","titleState","setButtonNone","put","setPut","trashShow","putShow","destination","yearToggle","setYearToggle","inputRef","useRef","toggleContent","checkbox","document","querySelector","parentNode","classList","contains","add","remove","checked","draggable","ref","old","m","for","pointerEvents","NoneTitle","pointerAuto","Movie","Home","listToggle","setListToggle","setPick","putPopup","setPutPopup","setSettingsPopup","removePopup","setRemovePopup","transState","setTransState","togglePointer","setTogglePointer","setTitleState","setTrashShow","setPutShow","setTrash","a","querySelectorAll","filter","frontRemove","dataFilter","removed","renderMovies","length","onDragEnd","result","items","Array","from","splice","source","index","reorderedItem","droppableId","provided","droppableProps","innerRef","draggableId","toString","draggableProps","dragHandleProps","flexDirection","alignItems","background","borderRadius","position","height","btnText","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d1f0b6b5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst InputField = ({ type, value, placeholder, onChange, errorMessage }) => {\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"movieTitle\"\r\n        type={type}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n      />\r\n      <span className=\"nullText\">{errorMessage}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\n\r\nconst TxtareaField = ({ type, value, placeholder, onChange, errorMessage }) => {\r\n  return (\r\n    <>\r\n      <textarea\r\n        wrap=\"hard\"\r\n        className=\"movieText\"\r\n        type={type}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n      />\r\n      <span className=\"nullText\">{errorMessage}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TxtareaField;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport InputField from \"./InputField\";\r\nimport TxtareaField from \"./txtareaField\";\r\n\r\nconst MovieForm = (props) => {\r\n  const [movieTitle, setMovieTitle] = useState(\"\");\r\n  const [movieYear, setMovieYear] = useState(\"\");\r\n  const [TitleError, setTitleError] = useState(\"\");\r\n  const [YearError, setYearError] = useState(\"\");\r\n  const [searchBar, setSearchBar] = useState(false);\r\n  const [sideBar, setSideBar] = useState(true);\r\n  let titleCheck = true;\r\n\r\n  useEffect(() => {\r\n    resetErrors();\r\n  }, [props.pick]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    resetErrors();\r\n    if (props.toggle === true) {\r\n      if (validateForm()) {\r\n        if (titleCheck) {\r\n          validateTrue();\r\n        }\r\n\r\n        if (!titleCheck) {\r\n          titleCheck = true;\r\n          validateFalse();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateTrue = () => {\r\n    let newMovie = {\r\n      id: Date.now(),\r\n      title: movieTitle,\r\n      year: movieYear,\r\n    };\r\n    console.log(\"실행\");\r\n\r\n    var existingEntries = JSON.parse(localStorage.getItem(\"allEntries\"));\r\n    if (existingEntries == null) {\r\n      localStorage.setItem(\"allEntries\", []);\r\n    }\r\n    existingEntries.push(newMovie);\r\n\r\n    props.addMovie(existingEntries);\r\n    setMovieTitle(\"\");\r\n    setMovieYear(\"\");\r\n  };\r\n\r\n  const validateFalse = () => {\r\n    let newMovie = {\r\n      id: Date.now(),\r\n      title: null,\r\n      year: movieYear,\r\n    };\r\n    console.log(\"실행\");\r\n\r\n    var existingEntries = JSON.parse(localStorage.getItem(\"allEntries\"));\r\n    if (existingEntries == null) {\r\n      localStorage.setItem(\"allEntries\", []);\r\n    }\r\n    existingEntries.push(newMovie);\r\n\r\n    props.addMovie(existingEntries);\r\n    setMovieTitle(\"\");\r\n    setMovieYear(\"\");\r\n  };\r\n\r\n  const putSubmit = (e) => {\r\n    console.log(\"수정\");\r\n    e.preventDefault();\r\n    resetErrors();\r\n    props.setPickNone(false);\r\n    props.setPickState(null);\r\n\r\n    if (props.toggle === false) {\r\n      props.setToggle(true);\r\n      console.log(\"test\");\r\n\r\n      var copyState = [...props.movies];\r\n\r\n      copyState.map((item) => {\r\n        var correcting = item.id === props.pick.id;\r\n        if (correcting) {\r\n          item.title = props.picktitle;\r\n          item.year = props.pickYear;\r\n        }\r\n      });\r\n    }\r\n    localStorage.setItem(\"allEntries\", JSON.stringify(copyState));\r\n\r\n    setMovieTitle(\"\");\r\n    setMovieYear(\"\");\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let validated = true;\r\n    if (!movieTitle) {\r\n      // setTitleError(\"제목을 넣어주세요\");\r\n      titleCheck = false;\r\n      // validated = true;\r\n    }\r\n\r\n    if (!movieYear) {\r\n      // setYearError(\"내용을 넣어주세요\");\r\n      validated = false;\r\n    }\r\n    if (validated) {\r\n      setMovieTitle(\"\");\r\n      setMovieYear(\"\");\r\n    }\r\n    return validated;\r\n  };\r\n\r\n  const resetErrors = () => {\r\n    setTitleError(\"\");\r\n    setYearError(\"\");\r\n  };\r\n\r\n  const putIconCenter = {\r\n    width: \"358px\",\r\n    textAlign: \"center\",\r\n    display: \"block\",\r\n  };\r\n\r\n  const putIcon = {\r\n    color: \"#fff\",\r\n    backgroundColor: \"#f2bdbd\",\r\n    boxShadow: \"none\",\r\n  };\r\n\r\n  // const settingPopup = () => {\r\n  //   props.setSettingsPopup(true);\r\n  // };\r\n\r\n  const formFolding = () => {\r\n    resetErrors();\r\n    props.setFormDisplayNone(!props.formDisplayNone);\r\n  };\r\n\r\n  const toggleFlex = props.formDisplayNone\r\n    ? {\r\n        display: \"none\",\r\n      }\r\n    : { display: \"unset\" };\r\n\r\n  // const arrowRotate = props.formDisplayNone\r\n  //   ? {\r\n  //       transform: \"rotate(180deg)\",\r\n  //     }\r\n  //   : {\r\n  //       transform: \"rotate(0deg)\",\r\n  //     };\r\n\r\n  const inputFieldValue = (e) => {\r\n    setMovieTitle(e.target.value);\r\n  };\r\n  const txtFieldValue = (e) => {\r\n    setMovieYear(e.target.value);\r\n  };\r\n\r\n  const trashClick = () => {\r\n    props.setTrash(!props.trash);\r\n    props.setTrashShow(!props.trashShow);\r\n  };\r\n\r\n  const putClick = () => {\r\n    props.setPut(!props.put);\r\n    props.setPutShow(!props.putShow);\r\n  };\r\n\r\n  const searchClick = () => {\r\n    props.setButtonNone(false);\r\n    setSearchBar(true);\r\n  };\r\n\r\n  const resetSearch = () => {\r\n    props.setButtonNone(true);\r\n    setSearchBar(false);\r\n  };\r\n\r\n  const sideBarShow = () => {\r\n    setSideBar(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    var existingInput = JSON.parse(localStorage.getItem(\"inputValue\"));\r\n    var existingTxt = JSON.parse(localStorage.getItem(\"txtValue\"));\r\n    if (existingInput === null) {\r\n      localStorage.setItem(\"inputValue\", []);\r\n    } else {\r\n      setMovieTitle(existingInput);\r\n    }\r\n\r\n    if (existingTxt === null) {\r\n      localStorage.setItem(\"txtValue\", []);\r\n    } else {\r\n      setMovieYear(existingTxt);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (movieTitle) {\r\n      localStorage.setItem(\"inputValue\", JSON.stringify(movieTitle));\r\n    } else {\r\n      localStorage.removeItem(\"inputValue\");\r\n    }\r\n  }, [movieTitle]);\r\n\r\n  useEffect(() => {\r\n    if (movieYear) {\r\n      localStorage.setItem(\"txtValue\", JSON.stringify(movieYear));\r\n    } else {\r\n      localStorage.removeItem(\"txtValue\");\r\n    }\r\n  }, [movieYear]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {props.toggle ? (\r\n        <div>\r\n          <form className=\"movieForm\" onSubmit={onSubmit}>\r\n            <div className=\"field\" style={toggleFlex}>\r\n              <InputField\r\n                type=\"text\"\r\n                value={movieTitle}\r\n                placeholder=\"\"\r\n                onChange={inputFieldValue}\r\n                errorMessage={TitleError}\r\n              />\r\n              <TxtareaField\r\n                type=\"text\"\r\n                value={movieYear}\r\n                placeholder=\"\"\r\n                onChange={txtFieldValue}\r\n                errorMessage={YearError}\r\n              />\r\n            </div>\r\n            <div className=\"buttonIcon\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={formFolding}\r\n                className={props.formDisplayNone ? null : \"press\"}\r\n              >\r\n                <span className={props.formDisplayNone ? \"original\" : \"rotate\"}>\r\n                  <i class=\"fas fa-chevron-down\"></i>\r\n                </span>\r\n              </button>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className={props.buttonNone ? \"addbtn\" : \"btnNone\"}\r\n                style={toggleFlex}\r\n              >\r\n                <span className=\"plusIcon\">\r\n                  <span>\r\n                    <i class=\"fas fa-plus\"></i>\r\n                  </span>\r\n                </span>\r\n              </button>\r\n              {/* <button\r\n                onClick={searchClick}\r\n                type=\"button\"\r\n                className={props.buttonNone ? \"btnShow\" : \"btnNone\"}\r\n              >\r\n                <span>\r\n                  <i class=\"fas fa-check\"></i>\r\n                </span>\r\n              </button> */}\r\n              {/* {searchBar ? (\r\n                <>\r\n                  <div className=\"searchForm\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"searchInput\"\r\n                      placeholder=\"내용을 검색해주세요.\"\r\n                    />\r\n                    <button type=\"button\" onClick={resetSearch}>\r\n                      <i class=\"fas fa-times\"></i>\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              ) : null} */}\r\n              <button\r\n                type=\"button\"\r\n                // onClick={settingPopup}\r\n                onClick={props.removeChecked}\r\n                // className={props.buttonNone ? \"btnShow\" : \"btnNone\"}\r\n              >\r\n                <span>\r\n                  <i class=\"fas fa-trash\"></i>\r\n                </span>\r\n              </button>\r\n              {/* {props.trashShow ? null : (\r\n                <button type=\"button\" onClick={props.removeChecked}>\r\n                  <span>\r\n                    <i class=\"fas fa-trash\"></i>\r\n                  </span>\r\n                </button>\r\n              )} */}\r\n              {/* {props.putShow ? null : (\r\n                <button type=\"button\" onClick={putClick}>\r\n                  <span>\r\n                    <i class=\"fas fa-edit\"></i>\r\n                  </span>\r\n                </button>\r\n              )} */}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <form className=\"movieForm\" onSubmit={putSubmit}>\r\n          <div className=\"field\">\r\n            <InputField\r\n              type=\"text\"\r\n              value={props.picktitle}\r\n              placeholder=\"\"\r\n              onChange={(e) => props.setPicktitle(e.target.value)}\r\n              errorMessage={TitleError}\r\n            />\r\n            <TxtareaField\r\n              type=\"text\"\r\n              value={props.pickYear}\r\n              placeholder=\"\"\r\n              onChange={(e) => props.setPickYear(e.target.value)}\r\n              errorMessage={YearError}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"buttonIcon\" style={putIconCenter}>\r\n            <button type=\"submit\" className=\"addbtn pink\" style={putIcon}>\r\n              <span className=\"plusIcon\">\r\n                <i class=\"fas fa-plus\"></i>\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieForm;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst YearAndTitle = ({\r\n  movie,\r\n  movies,\r\n  setMovies,\r\n  removeMovie,\r\n  pickMovie,\r\n  pickNone,\r\n  pickState,\r\n  titleState,\r\n  trash,\r\n  setButtonNone,\r\n  setPickNone,\r\n  put,\r\n  setPut,\r\n  buttonNone,\r\n  trashShow,\r\n  putShow,\r\n  addMovie,\r\n  destination,\r\n}) => {\r\n  const [yearToggle, setYearToggle] = useState(false);\r\n  const inputRef = useRef();\r\n  const toggleContent = (e) => {\r\n    // e.stopImmediatePropagation();\r\n    setYearToggle(!yearToggle);\r\n  };\r\n\r\n  const pointerNone = {\r\n    pointerEvents: \"none\",\r\n    display: \"none\",\r\n  };\r\n  const pointerNone2 = {\r\n    pointerEvents: \"none\",\r\n  };\r\n\r\n  const pointerAuto = {\r\n    pointerEvents: \"auto\",\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  useEffect(() => {\r\n    if (movie.title === \"none\") {\r\n      console.log(pickState);\r\n    }\r\n  }, [pickState]);\r\n\r\n  useEffect(() => {\r\n    setButtonNone(true);\r\n    setPickNone(false);\r\n  }, [trash]);\r\n\r\n  // var checkbox = document.querySelector(\r\n  //   \"input[type='checkbox']:nth-of-type(1):checked\"\r\n  // );\r\n  // if (checkbox) {\r\n  //   checkbox.parentNode.remove();\r\n  //   var copyState = [...movies];\r\n  //   var dataFilter = copyState.filter((item) => {\r\n  //     return item.id !== parseInt(checkbox.dataset[\"code\"]);\r\n  //   });\r\n  //   setMovies(dataFilter);\r\n  //   localStorage.setItem(\"allEntries\", JSON.stringify(dataFilter));\r\n  // }\r\n\r\n  useEffect(() => {\r\n    var checkbox = document.querySelector(\r\n      \"input[type='checkbox']:nth-of-type(1)\"\r\n    );\r\n\r\n    if (!checkbox.parentNode.classList.contains(\"on\")) {\r\n      checkbox.parentNode.classList.remove(\"on\");\r\n    } else {\r\n      checkbox.parentNode.classList.add(\"on\");\r\n    }\r\n\r\n    setButtonNone(true);\r\n    setPickNone(false);\r\n  }, [put]);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  //지식인 답변 추가 - 체크된 todo 제거\r\n  const removeChecked = () => {\r\n    setMovies((old) => {\r\n      const removed = old.filter((m) => !m.checked);\r\n      localStorage.setItem(\"allEntries\", JSON.stringify(removed));\r\n      return removed;\r\n    });\r\n  };\r\n\r\n  //자기자신 삭제\r\n  const removeSelf = () => {\r\n    setMovies((old) => {\r\n      const removed = old.filter((m) => m !== movie);\r\n      localStorage.setItem(\"allEntries\", JSON.stringify(removed));\r\n      return removed;\r\n    });\r\n  };\r\n\r\n  //리엑트의 상태에 체크여부를 저장하도록 수정하였습니다.\r\n  const onChange = (e, movie) => {\r\n    //리엑트 상태를 활용하여 클래스를 관리하는 것을 추천.\r\n    //e.target.parentNode.classList.toggle(\"on\");\r\n    //movies 상태에서 체크여부 수정\r\n    setMovies((old) => {\r\n      const checked = old.map((m) =>\r\n        m === movie ? { ...movie, checked: e.target.checked } : m\r\n      );\r\n      localStorage.setItem(\"allEntries\", JSON.stringify(checked));\r\n      return checked;\r\n    });\r\n  };\r\n  const onChange2 = (e, movie) => {\r\n    //리엑트 상태를 활용하여 클래스를 관리하는 것을 추천.\r\n    //e.target.parentNode.classList.toggle(\"on\");\r\n    //movies 상태에서 체크여부 수정\r\n    setMovies((old) => {\r\n      const checked = old.map((m) =>\r\n        m === movie ? { ...movie, checked2: e.target.checked } : m\r\n      );\r\n      localStorage.setItem(\"allEntries\", JSON.stringify(checked));\r\n      return checked;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={movie.checked ? \"movieAndButton on\" : \"movieAndButton\"}\r\n        draggable=\"true\"\r\n      >\r\n        {/* <input\r\n          ref={inputRef}\r\n          className={trashShow ? \"checkbox on\" : \"checkbox\"}\r\n          type=\"checkbox\"\r\n          onChange={(e) => onChange2(e, movie)}\r\n        /> */}\r\n\r\n        <div className={pickState === movie.id ? \"movie on\" : \"movie\"}>\r\n          <div className={yearToggle ? \"movie_cont press\" : \"movie_cont\"}>\r\n            <input\r\n              ref={inputRef}\r\n              className=\"checkbox\"\r\n              onChange={(e) => onChange(e, movie)}\r\n              checked={movie.checked ? true : false}\r\n              type=\"checkbox\"\r\n              id=\"cb1\"\r\n            />\r\n            <label for=\"cb1\"></label>\r\n            <div\r\n              className={yearToggle ? \"movie-title break\" : \"movie-title\"}\r\n              onClick={(e) => toggleContent(e)}\r\n            >\r\n              {movie.title}\r\n            </div>\r\n            <span\r\n              onClick={(e) => toggleContent(e)}\r\n              className=\"areaHelper\"\r\n            ></span>\r\n\r\n            <div\r\n              className={yearToggle ? \"movie-year on\" : \"movie-year\"}\r\n              onClick={(e) => toggleContent(e)}\r\n            >\r\n              {movie.year}\r\n            </div>\r\n\r\n            <div className=\"movie_btn\">\r\n              <button\r\n                onClick={() => pickMovie(movie)}\r\n                style={pickNone ? pointerNone : pointerAuto}\r\n              >\r\n                {/* <i class=\"fas fa-pencil-alt\"></i> */}\r\n                <i class=\"fas fa-pencil-alt\"></i>\r\n              </button>\r\n              {/* <button\r\n                onClick={() => removeMovie(movie.id)}\r\n                style={pickNone ? pointerNone : pointerAuto}\r\n              >\r\n                삭제\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"checkButton\">\r\n        <button>\r\n          {/* <i class=\"fas fa-check\"></i> */}\r\n          <i class=\"far fa-circle\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YearAndTitle;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst NoneTitle = ({\r\n  movie,\r\n  removeMovie,\r\n  pickMovie,\r\n  pickNone,\r\n  pickState,\r\n  titleState,\r\n  trash,\r\n  setButtonNone,\r\n  setPickNone,\r\n  put,\r\n  buttonNone,\r\n  trashShow,\r\n  putShow,\r\n  setMovies,\r\n}) => {\r\n  const [yearToggle, setYearToggle] = useState(false);\r\n\r\n  const toggleContent = () => {\r\n    setYearToggle(!yearToggle);\r\n  };\r\n\r\n  const pointerNone = {\r\n    pointerEvents: \"none\",\r\n    display: \"none\",\r\n  };\r\n\r\n  const pointerAuto = {\r\n    pointerEvents: \"auto\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (movie.title === \"none\") {\r\n      console.log(pickState);\r\n    }\r\n  }, [pickState]);\r\n\r\n  useEffect(() => {\r\n    var checkbox = document.querySelector(\"input[type='checkbox']:checked\");\r\n    if (checkbox) {\r\n      const checkbox = {\r\n        textDecoration: \"line-through\",\r\n      };\r\n    }\r\n    setButtonNone(true);\r\n    setPickNone(false);\r\n  }, [trash]);\r\n\r\n  const checkbox = {\r\n    textDecoration: \"none\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    var checkbox = document.querySelector(\r\n      \"input[type='checkbox']:nth-of-type(1)\"\r\n    );\r\n\r\n    if (!checkbox.parentNode.classList.contains(\"on\")) {\r\n      checkbox.parentNode.classList.remove(\"on\");\r\n    } else {\r\n      checkbox.parentNode.classList.add(\"on\");\r\n    }\r\n\r\n    setButtonNone(true);\r\n    setPickNone(false);\r\n  }, [put]);\r\n\r\n  const onChange = (e, movie) => {\r\n    setMovies((old) => {\r\n      const checked = old.map((m) =>\r\n        m === movie ? { ...movie, checked: e.target.checked } : m\r\n      );\r\n      localStorage.setItem(\"allEntries\", JSON.stringify(checked));\r\n      return checked;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={movie.checked ? \"movieAndButton on\" : \"movieAndButton\"}\r\n        draggable=\"true\"\r\n      >\r\n        {/* <input\r\n          className={trashShow ? \"checkbox on\" : \"checkbox\"}\r\n          type=\"checkbox\"\r\n        /> */}\r\n\r\n        <div\r\n          className={pickState === movie.id ? \"movie on\" : \"movie\"}\r\n          style={pointerAuto}\r\n        >\r\n          <div className=\"movie_cont\">\r\n            <input\r\n              className=\"checkbox\"\r\n              onChange={(e) => onChange(e, movie)}\r\n              checked={movie.checked ? true : false}\r\n              type=\"checkbox\"\r\n              id=\"cb1\"\r\n            />\r\n            <label for=\"cb1\"></label>\r\n            <span onClick={() => toggleContent()} className=\"areaHelper\"></span>\r\n\r\n            <div\r\n              className={yearToggle ? \"only-year break\" : \"only-year\"}\r\n              onClick={() => toggleContent()}\r\n            >\r\n              {movie.year}\r\n            </div>\r\n\r\n            <div className=\"movie_btn\">\r\n              <button\r\n                onClick={() => pickMovie(movie)}\r\n                style={pickNone ? pointerNone : pointerAuto}\r\n              >\r\n                <i class=\"fas fa-pencil-alt\"></i>\r\n              </button>\r\n              {/* <button\r\n                onClick={() => removeMovie(movie.id)}\r\n                style={pickNone ? pointerNone : pointerAuto}\r\n              >\r\n                삭제\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"checkButton\">\r\n        <button>\r\n          {/* <i class=\"fas fa-check\"></i> */}\r\n          <i class=\"far fa-circle\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoneTitle;\r\n","import React from \"react\";\r\nimport YearAndTitle from \"./YearAndTitle\";\r\nimport NoneTitle from \"./NoneTitle\";\r\n\r\nfunction Movie({\r\n  movie,\r\n  movies,\r\n  setMovies,\r\n  removeMovie,\r\n  pickMovie,\r\n  pickNone,\r\n  pickState,\r\n  titleState,\r\n  trash,\r\n  setButtonNone,\r\n  setPickNone,\r\n  put,\r\n  setPut,\r\n  buttonNone,\r\n  putShow,\r\n  trashShow,\r\n  addMovie,\r\n  removeChecked,\r\n  destination,\r\n}) {\r\n  return (\r\n    <>\r\n      {movie.title !== null ? (\r\n        <YearAndTitle\r\n          movie={movie}\r\n          movies={movies}\r\n          setMovies={setMovies}\r\n          removeMovie={removeMovie}\r\n          pickMovie={pickMovie}\r\n          pickNone={pickNone}\r\n          pickState={pickState}\r\n          titleState={titleState}\r\n          put={put}\r\n          setPut={setPut}\r\n          trash={trash}\r\n          setButtonNone={setButtonNone}\r\n          setPickNone={setPickNone}\r\n          buttonNone={buttonNone}\r\n          putShow={putShow}\r\n          trashShow={trashShow}\r\n          addMovie={addMovie}\r\n          removeChecked={removeChecked}\r\n          destination={destination}\r\n        />\r\n      ) : (\r\n        <NoneTitle\r\n          movie={movie}\r\n          setMovies={setMovies}\r\n          removeMovie={removeMovie}\r\n          pickMovie={pickMovie}\r\n          pickNone={pickNone}\r\n          pickState={pickState}\r\n          titleState={titleState}\r\n          put={put}\r\n          trash={trash}\r\n          setButtonNone={setButtonNone}\r\n          setPickNone={setPickNone}\r\n          buttonNone={buttonNone}\r\n          putShow={putShow}\r\n          trashShow={trashShow}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MovieForm from \"../components/MovieForm\";\r\nimport Movie from \"../components/movie\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n// import background from \"/img/미.png\";\r\n\r\nconst Home = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [toggle, setToggle] = useState(true);\r\n  const [listToggle, setListToggle] = useState(false);\r\n  const [pick, setPick] = useState();\r\n  const [picktitle, setPicktitle] = useState();\r\n  const [pickYear, setPickYear] = useState();\r\n  const [putPopup, setPutPopup] = useState(false);\r\n  const [settingsPopup, setSettingsPopup] = useState(false);\r\n  const [removePopup, setRemovePopup] = useState(false);\r\n  const [transState, setTransState] = useState();\r\n  const [togglePointer, setTogglePointer] = useState(false);\r\n  const [pickNone, setPickNone] = useState(false);\r\n  const [pickState, setPickState] = useState();\r\n  const [titleState, setTitleState] = useState(true);\r\n  const [buttonNone, setButtonNone] = useState(true);\r\n  const [trashShow, setTrashShow] = useState(true);\r\n  const [putShow, setPutShow] = useState(true);\r\n  const [trash, setTrash] = useState(false);\r\n  const [put, setPut] = useState(false);\r\n  const [formDisplayNone, setFormDisplayNone] = useState(false);\r\n  const [destination, setDestination] = useState(false);\r\n\r\n  //드래그 start\r\n\r\n  // const [characters, updateCharacters] = useState();\r\n  function handleOnDragEnd(result) {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const items = Array.from(movies);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    setMovies(items);\r\n    localStorage.setItem(\"allEntries\", JSON.stringify(items));\r\n  }\r\n  //드래그 end\r\n\r\n  useEffect(() => {\r\n    var existingEntries = JSON.parse(localStorage.getItem(\"allEntries\"));\r\n\r\n    if (existingEntries == null) {\r\n      localStorage.setItem(\"allEntries\", \"[]\");\r\n    }\r\n    var a = JSON.parse(localStorage.getItem(\"allEntries\"));\r\n    setMovies(a);\r\n    // updateCharacters(a);\r\n    console.log(movies);\r\n  }, []);\r\n\r\n  useEffect(() => {});\r\n\r\n  if (movies) {\r\n    const movieComponent = document.querySelectorAll(\".movie\");\r\n    let picked = null;\r\n    let pickedIndex = null;\r\n  }\r\n\r\n  const addMovie = (existingEntries) => {\r\n    //addMovie실행시 local에 값이 먼저들어가고\r\n    localStorage.setItem(\"allEntries\", JSON.stringify(existingEntries));\r\n    //그 값들을 javascript에서 사용할 수 있게끔 변환해서\r\n    var a = JSON.parse(localStorage.getItem(\"allEntries\"));\r\n    //movies 스테이트에 그 값들을 넣어줌.\r\n    // movies 스테이트가 값에 따라 목록에 뜨도록 되있음. ( 하단에 renderMovies 참조.)\r\n    if (a) {\r\n      setMovies(a);\r\n      // updateCharacters(a);\r\n    }\r\n  };\r\n\r\n  const removeMovie = (id) => {\r\n    if (removePopup === true) {\r\n      frontRemove(id);\r\n      setToggle(true);\r\n      var dataFilter = movies.filter((item) => {\r\n        return item.id !== id; // 클릭한거의 id와 movies의 id인 item.id를 비교\r\n      });\r\n      localStorage.setItem(\"allEntries\", JSON.stringify(dataFilter));\r\n    } else {\r\n      setRemovePopup(true);\r\n      setTransState(id);\r\n      setPickNone(true);\r\n    }\r\n  };\r\n\r\n  const removePopupOk = () => {\r\n    setRemovePopup(false);\r\n    removeMovie(transState);\r\n    setPickNone(false);\r\n    setPickState(null);\r\n  };\r\n\r\n  const removePopupX = () => {\r\n    setRemovePopup(false);\r\n    setPickNone(false);\r\n  };\r\n\r\n  const putPopupOk = () => {\r\n    setPutPopup(!putPopup);\r\n\r\n    localStorage.removeItem(\"inputValue\");\r\n    localStorage.removeItem(\"txtValue\");\r\n\r\n    pickMovie(transState);\r\n  };\r\n  const putPopupX = () => {\r\n    setPutPopup(!putPopup);\r\n    setPickState(null);\r\n  };\r\n\r\n  const pickMovie = (id) => {\r\n    // setPickNone(true);\r\n    setPick(id);\r\n    setPicktitle(id.title);\r\n    setPickYear(id.year);\r\n    // console.log(pick.title);\r\n    setToggle(false);\r\n    setPickState(id.id);\r\n\r\n    //토클이 false인 상태이고 && movie.id와 클릭된것의 id가 같은 경우에만 실행되서 토글적용.\r\n    if (!toggle && id.id === pickState) {\r\n      setToggle(true);\r\n      setPickState(null);\r\n    }\r\n\r\n    var dataFilter = movies.filter((item) => {\r\n      return item.id === id.id; // 클릭한거의 id와 movies의 id인 item.id를 비교\r\n    });\r\n\r\n    var existingInput = JSON.parse(localStorage.getItem(\"inputValue\"));\r\n    var existingTxt = JSON.parse(localStorage.getItem(\"txtValue\"));\r\n\r\n    if (existingInput || existingTxt) {\r\n      console.log(\"popup\");\r\n      setPutPopup(true);\r\n      setToggle(true);\r\n      setTransState(id);\r\n    }\r\n  };\r\n\r\n  const multiRemove = () => {\r\n    setSettingsPopup(false);\r\n    setButtonNone(false);\r\n    setTrashShow(false);\r\n    setPickNone(true);\r\n  };\r\n\r\n  const multiPut = () => {\r\n    setSettingsPopup(false);\r\n    setButtonNone(false);\r\n    setPutShow(false);\r\n    setPickNone(true);\r\n  };\r\n\r\n  const removeChecked = () => {\r\n    // console.log(\"tetet\");\r\n    // setTrash(!trash);\r\n    // setTrashShow(!trashShow);\r\n    // setButtonNone(true);\r\n    setMovies((old) => {\r\n      const removed = old.filter((m) => !m.checked);\r\n      localStorage.setItem(\"allEntries\", JSON.stringify(removed));\r\n      return removed;\r\n    });\r\n  };\r\n\r\n  //여기서 movies 의 state가 있으면 (을 .length ? 로 표현했다.) 맵을 돌려서 Movie컴포넌트에 movie(각 state)로 전달해서\r\n  // Movie컴포넌트에선 받은 movie를 활용해서 사용 ex) movie.title / movie.year\r\n  // 이것들은 결국 밑에 화면에 뜨도론 return 부분에 적어줌 {renderMovies} 이런식으로\r\n  const renderMovies = movies.length ? (\r\n    <DragDropContext onDragEnd={handleOnDragEnd}>\r\n      <Droppable droppableId=\"12345678\">\r\n        {(provided) => (\r\n          <ul\r\n            className=\"characters\"\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {movies.map((item, index) => {\r\n              return (\r\n                <Draggable\r\n                  key={item.id.toString()}\r\n                  draggableId={item.id.toString()}\r\n                  index={index}\r\n                >\r\n                  {(provided) => (\r\n                    <li\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    >\r\n                      <Movie\r\n                        movie={item}\r\n                        movies={movies}\r\n                        setMovies={setMovies}\r\n                        key={item.id}\r\n                        removeMovie={removeMovie}\r\n                        pickMovie={pickMovie}\r\n                        togglePointer={togglePointer}\r\n                        setTogglePointer={setTogglePointer}\r\n                        removePopup={removePopup}\r\n                        pickNone={pickNone}\r\n                        listToggle={listToggle}\r\n                        setListToggle={setListToggle}\r\n                        movies={movies}\r\n                        pickState={pickState}\r\n                        setPickState={setPickState}\r\n                        titleState={titleState}\r\n                        trash={trash}\r\n                        setButtonNone={setButtonNone}\r\n                        setPickNone={setPickNone}\r\n                        put={put}\r\n                        setPut={setPut}\r\n                        buttonNone={buttonNone}\r\n                        putShow={putShow}\r\n                        trashShow={trashShow}\r\n                        addMovie={addMovie}\r\n                        removeChecked={removeChecked}\r\n                        destination={destination}\r\n                      />\r\n                    </li>\r\n                  )}\r\n                </Draggable>\r\n              );\r\n            })}\r\n            {provided.placeholder}\r\n          </ul>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  ) : // <span className=\"null\">추가된 내용이 없습니다</span>\r\n  null;\r\n\r\n  function frontRemove(id) {\r\n    setMovies(\r\n      movies.filter((item) => {\r\n        return item.id !== id; // 클릭한거의 id와 movies의 id인 item.id를 비교\r\n      })\r\n    );\r\n  }\r\n\r\n  const addText = \"+\";\r\n  const putText = \"+\";\r\n  const AppBorder = {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    background: \"#ebecf0\",\r\n    borderRadius: \"10px\",\r\n    position: \"relative\",\r\n    width: \"460px\",\r\n    height: \"960px\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"AppBorder\" style={AppBorder}>\r\n        <h1 className=\"title\"></h1>\r\n        {toggle ? (\r\n          <MovieForm\r\n            addMovie={addMovie}\r\n            btnText={addText}\r\n            toggle={toggle}\r\n            movies={movies}\r\n            setPickState={setPickState}\r\n            setSettingsPopup={setSettingsPopup}\r\n            setTitleState={setTitleState}\r\n            titleState={titleState}\r\n            buttonNone={buttonNone}\r\n            setButtonNone={setButtonNone}\r\n            setTrash={setTrash}\r\n            trash={trash}\r\n            setPut={setPut}\r\n            put={put}\r\n            setButtonNone={setButtonNone}\r\n            setTrashShow={setTrashShow}\r\n            trashShow={trashShow}\r\n            setPutShow={setPutShow}\r\n            putShow={putShow}\r\n            removeChecked={removeChecked}\r\n            formDisplayNone={formDisplayNone}\r\n            setFormDisplayNone={setFormDisplayNone}\r\n          />\r\n        ) : (\r\n          <MovieForm\r\n            btnText={putText}\r\n            toggle={toggle}\r\n            setToggle={setToggle}\r\n            movies={movies}\r\n            pick={pick}\r\n            picktitle={picktitle}\r\n            pickYear={pickYear}\r\n            setPicktitle={setPicktitle}\r\n            setPickYear={setPickYear}\r\n            setRemovePopup={setRemovePopup}\r\n            setPickNone={setPickNone}\r\n            setPickState={setPickState}\r\n            removeChecked={removeChecked}\r\n            formDisplayNone={formDisplayNone}\r\n            setFormDisplayNone={setFormDisplayNone}\r\n          />\r\n        )}\r\n\r\n        {/* <DragDropContext onDragEnd={handleOnDragEnd}>\r\n          <Droppable droppableId=\"12345678\">\r\n            {(provided) => (\r\n              <ul\r\n                className=\"characters\"\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {characters.map(({ id, name, cont }, index) => {\r\n                  return (\r\n                    <Draggable key={id} draggableId={id} index={index}>\r\n                      {(provided) => (\r\n                        <li\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                        >\r\n                          <Movie />\r\n                        </li>\r\n                      )}\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </ul>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext> */}\r\n\r\n        <div className={formDisplayNone ? \"movieBox on\" : \"movieBox\"}>\r\n          {renderMovies}\r\n        </div>\r\n\r\n        {removePopup ? (\r\n          <div className=\"showPopup\">\r\n            <div className=\"transArea\"></div>\r\n            <div className=\"popupCenter\">\r\n              <span>show!!!</span>\r\n              <button onClick={removePopupOk}>Yes</button>\r\n              <button onClick={removePopupX}>NO</button>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {/* {settingsPopup ? (\r\n          <div className=\"showPopup\">\r\n            <div className=\"transArea\"></div>\r\n            <div className=\"popupCenter\">\r\n              <ul className=\"listbox\">\r\n                <li className=\"list\">\r\n                  <button onClick={multiPut}>완료목록체크</button>\r\n                </li>\r\n                <li className=\"list\">\r\n                  <button onClick={multiRemove}>다중목록삭제</button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ) : null} */}\r\n        {putPopup ? (\r\n          <div className=\"showPopup\">\r\n            <div className=\"transArea\"></div>\r\n            <div className=\"popupCenter\">\r\n              <div className=\"popupCenter\">\r\n                <span>작성중인 내용이 있습니다. 작성을 취소하시겠습니까?</span>\r\n                <button onClick={putPopupOk}>Yes</button>\r\n                <button onClick={putPopupX}>NO</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import Navbar from \"./components/Navbar\";\r\nimport routes from \"./routes\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./pages/home\";\r\n\r\nfunction App() {\r\n  return (\r\n    // <Router basename={process.env.PUBLIC_URL}>\r\n    //   <div className=\"note\">\r\n    //     <Switch>\r\n    //       {routes.map((route) => {\r\n    //         return (\r\n    //           <Route\r\n    //             exact\r\n    //             key={route.path}\r\n    //             path={route.path}\r\n    //             component={route.component}\r\n    //           />\r\n    //         );\r\n    //       })}\r\n    //     </Switch>\r\n    //   </div>\r\n    // </Router>\r\n    <div className=\"note\">\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n// import \"@fortawesome/fontawesome-free/js/all.js\";\r\n// import \"@fortawesome/fontawesome-free/js/all.js\";\r\nimport \"@fortawesome/fontawesome-free/js/all.js\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}